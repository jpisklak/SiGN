% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglik_err.R
\name{loglik_err}
\alias{loglik_err}
\title{Compute (Negative) Log-Likelihood for Beta Error Model}
\usage{
loglik_err(observed, predicted, phi, neg = TRUE, epsilon = 1e-04)
}
\arguments{
\item{observed}{A numeric vector of observed values (e.g., proportions),
each in the range \verb{[0, 1]}.}

\item{predicted}{A numeric vector of predicted values from the model, also
in \verb{[0, 1]}.}

\item{phi}{A scalar or numeric vector specifying the precision
(concentration) parameter(s) of the Beta distribution. If a vector, it must
be the same length as \code{observed} and \code{predicted}.}

\item{neg}{Logical. If \code{TRUE} (default), returns the negative
log-likelihood (useful for optimisation). If \code{FALSE}, returns the
log-likelihood.}

\item{epsilon}{A small numeric value used to constrain \code{observed} and
\code{predicted} away from 0 and 1, ensuring numerical stability (default
is \code{1e-4}).}
}
\value{
A single numeric value: the negative log-likelihood or
log-likelihood of the data under the Beta error model.
}
\description{
Calculates the log-likelihood (or negative log-likelihood) of a set of
observed values under a Beta-distributed error model.
}
\details{
This function is useful for evaluating model fit when prediction errors are
assumed to follow a Beta distribution, which is appropriate for bounded
continuous data such as proportions. The function computes the
log-likelihood by treating each observed value as a draw from a Beta
distribution with mean equal to the model's prediction and concentration
controlled by \code{phi}.
}
\examples{
# Scalar phi
loglik_err(c(0.3, 0.6), c(0.25, 0.55), phi = 20)

# Vectorised phi
loglik_err(c(0.3, 0.6), c(0.25, 0.55), phi = c(15, 25))

# Return log-likelihood instead of negative log-likelihood
loglik_err(c(0.3, 0.6), c(0.25, 0.55), phi = 20, neg = FALSE)

}
